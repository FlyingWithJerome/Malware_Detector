'''
dataset.py

This module prepares the dataset for training
'''

from utilities import get_data_directory, extract_manifest
from encoder import Encoder, extract_singlefile
from permission_vector import extract_permissions

def make_apk_vector(filename, pscout_location, extract_manifest_file=False, is_malware=False):
    '''
    this function converts an apk to a vector that can be feed into
    a classifier
    '''

    used_function = extract_singlefile(filename, dump=False)
    api_vectors   = Encoder(used_function, pscout_location).encode()

    if extract_manifest_file:
        destination = extract_manifest(filename, is_malware=is_malware)

        if not (destination is None):
            permission_v     = extract_permissions(destination)

            permission_v_int = permission_v.to_int_vector()

            permission_v_int.extend(api_vectors)

            permission_v_int.append(1 if is_malware else 0)
            return permission_v_int
        
    return api_vectors


if __name__ == "__main__":
    r = make_apk_vector("/Users/jeromemao/Desktop/EECS600/project/data/friendly_apk/1000_com.activefrequency.android.rockout.apk",
    "/Users/jeromemao/Desktop/EECS600/project/data/training_data/API_22/API_22_parsed_api.csv",
    extract_manifest_file=True,
    is_malware=False)

    print len(r)




